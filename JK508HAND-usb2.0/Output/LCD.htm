<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\Output\LCD.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\Output\LCD.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue May 28 15:36:57 2019
<BR><P>
<H3>Maximum Stack Usage =        288 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Key_Function &rArr; ENTER_HANDLE &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2e]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2e]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[16]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[30]">CAN1_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[31]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[32]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2f]">CAN1_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5c]">CAN2_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5d]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5e]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5b]">CAN2_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6b]">CRYP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6a]">DCMI_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[27]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[28]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[29]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2a]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2b]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2c]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2d]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4b]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[76]">DMA2D_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[54]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[55]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[56]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[57]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[58]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[60]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[61]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[62]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[19]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[59]">ETH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5a]">ETH_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[22]">EXTI0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[44]">EXTI15_10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[23]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[24]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[25]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[26]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[33]">EXTI9_5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[20]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4c]">FMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6d]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6c]">HASH_RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[14]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3c]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3b]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3e]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3d]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[65]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[64]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[75]">LTDC_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[74]">LTDC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[15]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[13]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5f]">OTG_FS_IRQHandler</a> from stm32f4xx_it.o(i.OTG_FS_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[46]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[67]">OTG_HS_EP1_IN_IRQHandler</a> from usb_bsp.o(i.OTG_HS_EP1_IN_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[66]">OTG_HS_EP1_OUT_IRQHandler</a> from usb_bsp.o(i.OTG_HS_EP1_OUT_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[69]">OTG_HS_IRQHandler</a> from usb_bsp.o(i.OTG_HS_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[68]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1d]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1a]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[21]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[45]">RTC_Alarm_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1f]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[12]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[73]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4d]">SDIO_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3f]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[40]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4f]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[70]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[71]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[72]">SPI6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[18]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1b]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[78]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[1e]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[34]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[37]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[36]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[35]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[38]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[39]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3a]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4e]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[52]">TIM6_DAC_IRQHandler</a> from bsp_basic_tim.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[53]">TIM7_IRQHandler</a> from bsp_basic_tim.o(i.TIM7_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[47]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4a]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[49]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[48]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[50]">UART4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[51]">UART5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6e]">UART7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6f]">UART8_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[41]">USART1_IRQHandler</a> from stm32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[42]">USART2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[43]">USART3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[63]">USART6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1]">USBD_DataInStage</a> from usbd_core.o(i.USBD_DataInStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[0]">USBD_DataOutStage</a> from usbd_core.o(i.USBD_DataOutStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[9]">USBD_DevConnected</a> from usbd_core.o(i.USBD_DevConnected) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[a]">USBD_DevDisconnected</a> from usbd_core.o(i.USBD_DevDisconnected) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[7]">USBD_IsoINIncomplete</a> from usbd_core.o(i.USBD_IsoINIncomplete) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[8]">USBD_IsoOUTIncomplete</a> from usbd_core.o(i.USBD_IsoOUTIncomplete) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[4]">USBD_Reset</a> from usbd_core.o(i.USBD_Reset) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[6]">USBD_Resume</a> from usbd_core.o(i.USBD_Resume) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[3]">USBD_SOF</a> from usbd_core.o(i.USBD_SOF) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[2]">USBD_SetupStage</a> from usbd_core.o(i.USBD_SetupStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[5]">USBD_Suspend</a> from usbd_core.o(i.USBD_Suspend) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[10]">USBD_USR_ConfigStrDescriptor</a> from usbd_desc.o(i.USBD_USR_ConfigStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[b]">USBD_USR_DeviceDescriptor</a> from usbd_desc.o(i.USBD_USR_DeviceDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[11]">USBD_USR_InterfaceStrDescriptor</a> from usbd_desc.o(i.USBD_USR_InterfaceStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[c]">USBD_USR_LangIDStrDescriptor</a> from usbd_desc.o(i.USBD_USR_LangIDStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[d]">USBD_USR_ManufacturerStrDescriptor</a> from usbd_desc.o(i.USBD_USR_ManufacturerStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[e]">USBD_USR_ProductStrDescriptor</a> from usbd_desc.o(i.USBD_USR_ProductStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[f]">USBD_USR_SerialStrDescriptor</a> from usbd_desc.o(i.USBD_USR_SerialStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[17]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1c]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[79]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[7b]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[7a]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[7e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[7d]">fputc</a> from bsp_debug_usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[7c]">isspace</a> from isspace_o.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[77]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[79]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[207]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[7f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[208]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[209]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[20a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[20b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[20c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[12]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[20d]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1fd]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
</UL>

<P><STRONG><a name="[20f]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[200]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>

<P><STRONG><a name="[11b]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[201]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>

<P><STRONG><a name="[11e]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_off
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[84]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfocus_off
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cfocus_off
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[210]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[211]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>

<P><STRONG><a name="[212]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[213]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__strtod_int</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[86]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[214]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[215]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8a]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1f9]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[80]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[216]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[7c]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[95]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[9e]"></a>_scanf_really_real</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[7a]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[a0]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[217]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>ACC_HANDLE</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bsp_key.o(i.ACC_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ACC_HANDLE &rArr; maxfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_all
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[19c]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[197]"></a>ADC_CommonInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_CommonInit))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[19b]"></a>ADC_DMACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[19a]"></a>ADC_DMARequestAfterLastTransferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_DMARequestAfterLastTransferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[a5]"></a>ADC_GPIO_CONFIG</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, adc.o(i.ADC_GPIO_CONFIG))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ADC_GPIO_CONFIG &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[198]"></a>ADC_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f4xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[199]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f4xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[19d]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_SoftwareStartConv))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[a9]"></a>AD_Convert_read</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, adc.o(i.AD_Convert_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AD_Convert_read &rArr; Wr_CmDat &rArr; SpiTxByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wr_CmDat
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiTxByte
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiRxByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
</UL>

<P><STRONG><a name="[b0]"></a>BACK_HANDLE</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, bsp_key.o(i.BACK_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BACK_HANDLE &rArr; del_num &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[b2]"></a>Beep_GPIO_Config</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_beep.o(i.Beep_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Beep_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>ButtonSound</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_key.o(i.ButtonSound))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ButtonSound &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[b5]"></a>CH376_GPIO_Init</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, ch376.o(i.CH376_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CH376_GPIO_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>Cfocus_off</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, bsp_key.o(i.Cfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Cfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
</UL>

<P><STRONG><a name="[c2]"></a>DCD_EP_ClrStall</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_EP_ClrStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DCD_EP_ClrStall &rArr; USB_OTG_EPClearStall
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPClearStall
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
</UL>

<P><STRONG><a name="[c4]"></a>DCD_EP_Open</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, usb_dcd.o(i.DCD_EP_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DCD_EP_Open &rArr; USB_OTG_EPActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Reset
</UL>

<P><STRONG><a name="[c6]"></a>DCD_EP_PrepareRx</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, usb_dcd.o(i.DCD_EP_PrepareRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueRx
</UL>

<P><STRONG><a name="[1e8]"></a>DCD_EP_SetAddress</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usb_dcd.o(i.DCD_EP_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DCD_EP_SetAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress
</UL>

<P><STRONG><a name="[c9]"></a>DCD_EP_Stall</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_EP_Stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DCD_EP_Stall &rArr; USB_OTG_EPSetStall
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPSetStall
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>

<P><STRONG><a name="[cb]"></a>DCD_EP_Tx</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, usb_dcd.o(i.DCD_EP_Tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueSendData
</UL>

<P><STRONG><a name="[dc]"></a>DISP_CNL_S</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, bsp_lcd.o(i.DISP_CNL_S))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DISP_CNL_S &rArr; DISP_INPUT &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INPUT
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
</UL>

<P><STRONG><a name="[df]"></a>DISP_INPUT</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_INPUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DISP_INPUT &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChinese
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>

<P><STRONG><a name="[e1]"></a>DISP_INS</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, bsp_lcd.o(i.DISP_INS))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DISP_INS &rArr; DISP_SINS &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SINS
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
</UL>

<P><STRONG><a name="[e2]"></a>DISP_SINS</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_SINS))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DISP_SINS &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChinese
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SYS
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
</UL>

<P><STRONG><a name="[e3]"></a>DISP_SYS</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, bsp_lcd.o(i.DISP_SYS))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DISP_SYS &rArr; DISP_SINS &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SINS
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
</UL>

<P><STRONG><a name="[e4]"></a>DISP_TEMP_L</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_TEMP_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DISP_TEMP_L &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
</UL>

<P><STRONG><a name="[e6]"></a>DMA2D_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_dma2d.o(i.DMA2D_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2D_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[159]"></a>DMA2D_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma2d.o(i.DMA2D_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[157]"></a>DMA2D_Init</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, stm32f4xx_dma2d.o(i.DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA2D_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[158]"></a>DMA2D_StartTransfer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma2d.o(i.DMA2D_StartTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[196]"></a>DMA_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[195]"></a>DMA_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[e8]"></a>DOT_HANDLE</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, bsp_key.o(i.DOT_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DOT_HANDLE &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[ea]"></a>DOWN_HANDLE</STRONG> (Thumb, 2634 bytes, Stack size 8 bytes, bsp_key.o(i.DOWN_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DOWN_HANDLE &rArr; Disp_sys &rArr; stimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_off
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_off
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[1c7]"></a>Datacov</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, main.o(i.Datacov))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Datacov
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
</UL>

<P><STRONG><a name="[19]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>Delay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_all
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
</UL>

<P><STRONG><a name="[f7]"></a>Disp_main</STRONG> (Thumb, 616 bytes, Stack size 8 bytes, manu.o(i.Disp_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Disp_main &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[fe]"></a>Disp_main_button</STRONG> (Thumb, 606 bytes, Stack size 8 bytes, manu.o(i.Disp_main_button))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Disp_main_button &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[fd]"></a>Disp_sys</STRONG> (Thumb, 978 bytes, Stack size 16 bytes, system.o(i.Disp_sys))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Disp_sys &rArr; stimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[102]"></a>Disp_sysset_button</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, system.o(i.Disp_sysset_button))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Disp_sysset_button &rArr; stimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawlang
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouch
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDim
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBrt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[109]"></a>DrawBattery</STRONG> (Thumb, 310 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawBattery))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DrawBattery &rArr; DrawCharge &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCharge
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>DrawBrt</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, bsp_lcd.o(i.DrawBrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DrawBrt &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
</UL>

<P><STRONG><a name="[10b]"></a>DrawCharge</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawCharge &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
</UL>

<P><STRONG><a name="[107]"></a>DrawDim</STRONG> (Thumb, 180 bytes, Stack size 4 bytes, bsp_lcd.o(i.DrawDim))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DrawDim &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
</UL>

<P><STRONG><a name="[f3]"></a>DrawInstruction</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[10c]"></a>DrawLetmenu</STRONG> (Thumb, 620 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawLetmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawLetmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[10d]"></a>DrawLogo</STRONG> (Thumb, 10898 bytes, Stack size 24 bytes, power_on.o(i.DrawLogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawLogo &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
</UL>

<P><STRONG><a name="[ff]"></a>DrawMenu</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawfileusbmenu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main_button
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[108]"></a>DrawTouch</STRONG> (Thumb, 96 bytes, Stack size 4 bytes, bsp_lcd.o(i.DrawTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DrawTouch &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[110]"></a>DrawUdisk1</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawUdisk1))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawUdisk1 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>

<P><STRONG><a name="[10f]"></a>DrawUdisk2</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawUdisk2))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>

<P><STRONG><a name="[111]"></a>DrawUnit</STRONG> (Thumb, 106 bytes, Stack size 4 bytes, bsp_lcd.o(i.DrawUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DrawUnit &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[104]"></a>Drawdate</STRONG> (Thumb, 158 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawdate &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[112]"></a>Drawdate2</STRONG> (Thumb, 102 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawdate2))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawdate2 &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[113]"></a>Drawfileusbmenu</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawfileusbmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Drawfileusbmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
</UL>

<P><STRONG><a name="[114]"></a>Drawhomemenu</STRONG> (Thumb, 208 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawhomemenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawhomemenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
</UL>

<P><STRONG><a name="[103]"></a>Drawlang</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawlang))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawlang &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
</UL>

<P><STRONG><a name="[115]"></a>Drawset_dismenu</STRONG> (Thumb, 160 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawset_dismenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawset_dismenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
</UL>

<P><STRONG><a name="[116]"></a>Drawsetmenu</STRONG> (Thumb, 160 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawsetmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawsetmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
</UL>

<P><STRONG><a name="[117]"></a>Drawsysinfomenu</STRONG> (Thumb, 160 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawsysinfomenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawsysinfomenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
</UL>

<P><STRONG><a name="[118]"></a>Drawsysmenu</STRONG> (Thumb, 160 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawsysmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawsysmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
</UL>

<P><STRONG><a name="[105]"></a>Drawtime</STRONG> (Thumb, 158 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawtime &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[119]"></a>Drawtime2</STRONG> (Thumb, 102 bytes, Stack size 4 bytes, bsp_lcd.o(i.Drawtime2))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Drawtime2 &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[11a]"></a>ENTER_HANDLE</STRONG> (Thumb, 2024 bytes, Stack size 40 bytes, bsp_key.o(i.ENTER_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ENTER_HANDLE &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouch
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main_button
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[120]"></a>ESC_HANDLE</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, bsp_key.o(i.ESC_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ESC_HANDLE &rArr; Newfocus_on &rArr; Drawfileusbmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawset_dismenu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[a4]"></a>Erase_all</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.Erase_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Erase_all &rArr; SPI_FLASH_SectorErase &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>

<P><STRONG><a name="[121]"></a>Esc_menu</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_key.o(i.Esc_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Esc_menu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
</UL>

<P><STRONG><a name="[1a2]"></a>FMC_GetFlagStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_fmc.o(i.FMC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[1a3]"></a>FMC_SDRAMCmdConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMCmdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[1a0]"></a>FMC_SDRAMInit</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[1a5]"></a>FMC_SetRefreshCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SetRefreshCount))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[123]"></a>FUNC1_HANDLE</STRONG> (Thumb, 1824 bytes, Stack size 8 bytes, bsp_key.o(i.FUNC1_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FUNC1_HANDLE &rArr; page_measure &rArr; Rfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_year
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_sec
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_hour
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_day
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[12c]"></a>FUNC2_HANDLE</STRONG> (Thumb, 1606 bytes, Stack size 8 bytes, bsp_key.o(i.FUNC2_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FUNC2_HANDLE &rArr; page_measure &rArr; Rfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_year
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_sec
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_hour
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_day
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[133]"></a>FUNC3_HANDLE</STRONG> (Thumb, 1088 bytes, Stack size 8 bytes, bsp_key.o(i.FUNC3_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FUNC3_HANDLE &rArr; page_measure &rArr; Rfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_mon
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_min
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[137]"></a>FUNC4_HANDLE</STRONG> (Thumb, 732 bytes, Stack size 8 bytes, bsp_key.o(i.FUNC4_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FUNC4_HANDLE &rArr; page_measure &rArr; Rfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_mon
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_min
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[13b]"></a>FUNC5_HANDLE</STRONG> (Thumb, 412 bytes, Stack size 8 bytes, bsp_key.o(i.FUNC5_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FUNC5_HANDLE &rArr; page_sys &rArr; Disp_sys &rArr; stimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime2
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate2
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Esc_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[a7]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GPIO_Config
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Config
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_GPIO_Config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_CONFIG
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_GPIO_Config
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_GPIO_Config
</UL>

<P><STRONG><a name="[b7]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_GPIO_Config
</UL>

<P><STRONG><a name="[154]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiRxByte
</UL>

<P><STRONG><a name="[aa]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INIT_ADS1216
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_GPIO_Config
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Convert_read
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiTxByte
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiRxByte
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_4052
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_4094
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_yy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_xx
</UL>

<P><STRONG><a name="[a8]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INIT_ADS1216
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Convert_read
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_CONFIG
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiTxByte
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiRxByte
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_4052
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_4094
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_yy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_xx
</UL>

<P><STRONG><a name="[14]"></a>HardFault_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1c8]"></a>Hex_Format</STRONG> (Thumb, 196 bytes, Stack size 20 bytes, main.o(i.Hex_Format))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Hex_Format
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
</UL>

<P><STRONG><a name="[13d]"></a>INIT_ADS1216</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, adc.o(i.INIT_ADS1216))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = INIT_ADS1216 &rArr; Wr_CmDat &rArr; SpiTxByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wr_CmDat
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiTxByte
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13e]"></a>Init_CH376</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, ch376.o(i.Init_CH376))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Init_CH376 &rArr; xWriteCH376Data &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[143]"></a>KEY0_HANDLE</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, bsp_key.o(i.KEY0_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = KEY0_HANDLE &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[144]"></a>KEY1_HANDLE</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, bsp_key.o(i.KEY1_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = KEY1_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLogo
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[146]"></a>KEY2_HANDLE</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, bsp_key.o(i.KEY2_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = KEY2_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[147]"></a>KEY3_HANDLE</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, bsp_key.o(i.KEY3_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = KEY3_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[148]"></a>KEY4_HANDLE</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, bsp_key.o(i.KEY4_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = KEY4_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[149]"></a>KEY5_HANDLE</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, bsp_key.o(i.KEY5_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = KEY5_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[14a]"></a>KEY6_HANDLE</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, bsp_key.o(i.KEY6_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = KEY6_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[14b]"></a>KEY7_HANDLE</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, bsp_key.o(i.KEY7_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = KEY7_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[14c]"></a>KEY8_HANDLE</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, bsp_key.o(i.KEY8_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = KEY8_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[14d]"></a>KEY9_HANDLE</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, bsp_key.o(i.KEY9_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = KEY9_HANDLE &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[155]"></a>Key_Delay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_key.o(i.Key_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Key_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[14e]"></a>Key_Function</STRONG> (Thumb, 300 bytes, Stack size 8 bytes, bsp_key.o(i.Key_Function))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Key_Function &rArr; ENTER_HANDLE &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY9_HANDLE
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_HANDLE
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOT_HANDLE
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BACK_HANDLE
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[152]"></a>Key_GPIO_Config</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, bsp_key.o(i.Key_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Key_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[153]"></a>Key_Scan</STRONG> (Thumb, 1536 bytes, Stack size 16 bytes, bsp_key.o(i.Key_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Key_Scan &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[156]"></a>LCD_Clear</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, bsp_lcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_Clear &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_StartTransfer
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_GetFlagStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
</UL>

<P><STRONG><a name="[de]"></a>LCD_DisplayChar_48</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, bsp_lcd.o(i.LCD_DisplayChar_48))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_DisplayChar_48 &rArr; LCD_DrawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_L
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SYS
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>

<P><STRONG><a name="[e5]"></a>LCD_DisplayChinese</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bsp_lcd.o(i.LCD_DisplayChinese))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChinese
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_L
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>

<P><STRONG><a name="[c1]"></a>LCD_DisplayStringLine</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, bsp_lcd.o(i.LCD_DisplayStringLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime2
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysinfomenu
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawset_dismenu
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawlang
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawfileusbmenu
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate2
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouch
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDim
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBrt
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main_button
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_off
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfocus_off
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_off
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cfocus_off
</UL>

<P><STRONG><a name="[15b]"></a>LCD_DisplayStringLine_L</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, bsp_lcd.o(i.LCD_DisplayStringLine_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_DisplayStringLine_L &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
</UL>

<P><STRONG><a name="[15a]"></a>LCD_DrawChar</STRONG> (Thumb, 268 bytes, Stack size 28 bytes, bsp_lcd.o(i.LCD_DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>

<P><STRONG><a name="[16c]"></a>LCD_DrawChar_Ex</STRONG> (Thumb, 206 bytes, Stack size 36 bytes, bsp_lcd.o(i.LCD_DrawChar_Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_DrawChar_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Lstring_Ex
</UL>

<P><STRONG><a name="[e0]"></a>LCD_DrawChinese</STRONG> (Thumb, 266 bytes, Stack size 28 bytes, bsp_lcd.o(i.LCD_DrawChinese))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_DrawChinese
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SINS
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INPUT
</UL>

<P><STRONG><a name="[bc]"></a>LCD_DrawFullRect</STRONG> (Thumb, 150 bytes, Stack size 80 bytes, bsp_lcd.o(i.LCD_DrawFullRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_StartTransfer
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_GetFlagStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLogo
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCharge
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_off
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfocus_off
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_off
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cfocus_off
</UL>

<P><STRONG><a name="[10e]"></a>LCD_DrawLine</STRONG> (Thumb, 158 bytes, Stack size 80 bytes, bsp_lcd.o(i.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_StartTransfer
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_GetFlagStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLogo
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>

<P><STRONG><a name="[15c]"></a>LCD_DrawRect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bsp_lcd.o(i.LCD_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>

<P><STRONG><a name="[10a]"></a>LCD_DrawUniLine</STRONG> (Thumb, 286 bytes, Stack size 72 bytes, bsp_lcd.o(i.LCD_DrawUniLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LCD_DrawUniLine &rArr; PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCharge
</UL>

<P><STRONG><a name="[15f]"></a>LCD_Init</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, bsp_lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; SDRAM_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAIConfig
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAICmd
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LTDCCLKDivConfig
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167]"></a>LCD_LayerInit</STRONG> (Thumb, 134 bytes, Stack size 72 bytes, bsp_lcd.o(i.LCD_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_LayerInit &rArr; LTDC_LayerInit
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerInit
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerCmd
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16b]"></a>LCD_Lstring_Ex</STRONG> (Thumb, 170 bytes, Stack size 60 bytes, bsp_lcd.o(i.LCD_Lstring_Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_Lstring_Ex &rArr; LCD_DrawChar_Ex
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar_Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
</UL>

<P><STRONG><a name="[be]"></a>LCD_SetBackColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetBackColor))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime2
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysinfomenu
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawset_dismenu
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawlang
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawfileusbmenu
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate2
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouch
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDim
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBrt
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main_button
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_off
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfocus_off
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_off
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cfocus_off
</UL>

<P><STRONG><a name="[bb]"></a>LCD_SetColors</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetColors))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLogo
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCharge
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_off
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfocus_off
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_off
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cfocus_off
</UL>

<P><STRONG><a name="[dd]"></a>LCD_SetFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_L
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SYS
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>

<P><STRONG><a name="[202]"></a>LCD_SetLayer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetLayer))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
</UL>

<P><STRONG><a name="[bd]"></a>LCD_SetTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime2
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysinfomenu
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawset_dismenu
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawlang
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawfileusbmenu
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate2
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouch
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLetmenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDim
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBrt
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main_button
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_off
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfocus_off
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_off
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cfocus_off
</UL>

<P><STRONG><a name="[16d]"></a>LCD_SetTransparency</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_lcd.o(i.LCD_SetTransparency))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetTransparency
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
</UL>

<P><STRONG><a name="[150]"></a>LEFT_HANDLE</STRONG> (Thumb, 2904 bytes, Stack size 8 bytes, bsp_key.o(i.LEFT_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LEFT_HANDLE &rArr; minfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[166]"></a>LTDC_Cmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[165]"></a>LTDC_Init</STRONG> (Thumb, 378 bytes, Stack size 20 bytes, stm32f4xx_ltdc.o(i.LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[16e]"></a>LTDC_LayerAlpha</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerAlpha))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
</UL>

<P><STRONG><a name="[16a]"></a>LTDC_LayerCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[168]"></a>LTDC_LayerInit</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_LayerInit
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[169]"></a>LTDC_ReloadConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_ReloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
</UL>

<P><STRONG><a name="[15]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1c5]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_NVIC_Configuration
</UL>

<P><STRONG><a name="[1c4]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_NVIC_Configuration
</UL>

<P><STRONG><a name="[f8]"></a>Newfocus_off</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bsp_key.o(i.Newfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Newfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[11f]"></a>Newfocus_on</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, bsp_key.o(i.Newfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Newfocus_on &rArr; Drawfileusbmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawfileusbmenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[5f]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.OTG_FS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OTG_FS_IRQHandler &rArr; USBD_OTG_ISR_Handler &rArr; DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usb_bsp.o(i.OTG_HS_EP1_IN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OTG_HS_EP1_IN_IRQHandler &rArr; USBD_OTG_EP1IN_ISR_Handler &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_EP1IN_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usb_bsp.o(i.OTG_HS_EP1_OUT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OTG_HS_EP1_OUT_IRQHandler &rArr; USBD_OTG_EP1OUT_ISR_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_EP1OUT_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usb_bsp.o(i.OTG_HS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OTG_HS_IRQHandler &rArr; USBD_OTG_ISR_Handler &rArr; DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[177]"></a>Out_4094</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, adc.o(i.Out_4094))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Out_4094 &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Range_out
</UL>

<P><STRONG><a name="[17c]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[15d]"></a>PutPixel</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, bsp_lcd.o(i.PutPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
</UL>

<P><STRONG><a name="[a6]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GPIO_Config
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Config
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_GPIO_Config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_CONFIG
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_GPIO_Config
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_GPIO_Config
</UL>

<P><STRONG><a name="[e7]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>

<P><STRONG><a name="[19f]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[17b]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[b6]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[164]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17d]"></a>RCC_LSEConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[162]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LTDCCLKDivConfig))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[163]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAICmd))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[161]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAIConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLLSAIConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[17f]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[17e]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[151]"></a>RIGHT_HANDLE</STRONG> (Thumb, 2912 bytes, Stack size 8 bytes, bsp_key.o(i.RIGHT_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = RIGHT_HANDLE &rArr; rightfocus_on &rArr; Drawfileusbmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[17a]"></a>RTC_CLK_Config</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_rtc.o(i.RTC_CLK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_CLK_Config &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[186]"></a>RTC_EnterInitMode</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[187]"></a>RTC_ExitInitMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[183]"></a>RTC_GetDate</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
</UL>

<P><STRONG><a name="[185]"></a>RTC_GetTime</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
</UL>

<P><STRONG><a name="[181]"></a>RTC_Init</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[205]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[188]"></a>RTC_SetDate</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_year
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_mon
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_day
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_year
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_mon
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_day
</UL>

<P><STRONG><a name="[18a]"></a>RTC_SetTime</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_sec
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_min
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_hour
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_sec
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_min
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_hour
</UL>

<P><STRONG><a name="[18b]"></a>RTC_TimeAndDate_Set</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, bsp_rtc.o(i.RTC_TimeAndDate_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18d]"></a>RTC_TimeAndDate_Show</STRONG> (Thumb, 2202 bytes, Stack size 120 bytes, bsp_rtc.o(i.RTC_TimeAndDate_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = RTC_TimeAndDate_Show &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[180]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18c]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_year
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_sec
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_mon
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_min
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_hour
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_day
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_year
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_sec
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_mon
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_min
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_hour
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_day
</UL>

<P><STRONG><a name="[18e]"></a>Range_adj</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, adc.o(i.Range_adj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Range_adj &rArr; Range_out &rArr; Set_4052 &rArr; Wr_CmDat &rArr; SpiTxByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Range_out
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
</UL>

<P><STRONG><a name="[18f]"></a>Range_out</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, adc.o(i.Range_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Range_out &rArr; Set_4052 &rArr; Wr_CmDat &rArr; SpiTxByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_4052
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_4094
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Range_adj
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[206]"></a>Read_Flash_Init_Handle</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, main.o(i.Read_Flash_Init_Handle))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[191]"></a>Read_flag</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(i.Read_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read_flag &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[193]"></a>Rfocus_off</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, bsp_key.o(i.Rfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Rfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
</UL>

<P><STRONG><a name="[160]"></a>SDRAM_Init</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, bsp_sdram.o(i.SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SDRAM_Init &rArr; SDRAM_InitSequence &rArr; SDRAM_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMInit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
</UL>

<P><STRONG><a name="[192]"></a>SPI_FLASH_BufferRead</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.SPI_FLASH_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_flag
</UL>

<P><STRONG><a name="[1a7]"></a>SPI_FLASH_BufferWrite</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, bsp_spi_flash.o(i.SPI_FLASH_BufferWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
</UL>

<P><STRONG><a name="[1a9]"></a>SPI_FLASH_Init</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, bsp_spi_flash.o(i.SPI_FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPI_FLASH_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a8]"></a>SPI_FLASH_PageWrite</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.SPI_FLASH_PageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>

<P><STRONG><a name="[1ac]"></a>SPI_FLASH_ReadDeviceID</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_FLASH_ReadDeviceID))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_FLASH_ReadDeviceID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ad]"></a>SPI_FLASH_ReadID</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bsp_spi_flash.o(i.SPI_FLASH_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_FLASH_ReadID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[122]"></a>SPI_FLASH_SectorErase</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_FLASH_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_FLASH_SectorErase &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_all
</UL>

<P><STRONG><a name="[1a6]"></a>SPI_FLASH_SendByte</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_FLASH_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadDeviceID
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[1ab]"></a>SPI_FLASH_WaitForWriteEnd</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_FLASH_WaitForWriteEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[1aa]"></a>SPI_FLASH_WriteEnable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_FLASH_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[1af]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>

<P><STRONG><a name="[1b1]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>

<P><STRONG><a name="[1b0]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>

<P><STRONG><a name="[b8]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
</UL>

<P><STRONG><a name="[1b3]"></a>SPIx_ReadWriteByte</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, ch376.o(i.SPIx_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
</UL>

<P><STRONG><a name="[18]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>Save_flag</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.Save_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>

<P><STRONG><a name="[190]"></a>Set_4052</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, adc.o(i.Set_4052))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Set_4052 &rArr; Wr_CmDat &rArr; SpiTxByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wr_CmDat
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiTxByte
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Range_out
</UL>

<P><STRONG><a name="[ad]"></a>SpiRxByte</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, adc.o(i.SpiRxByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SpiRxByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Convert_read
</UL>

<P><STRONG><a name="[ae]"></a>SpiTxByte</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, adc.o(i.SpiTxByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SpiTxByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INIT_ADS1216
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Convert_read
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wr_CmDat
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_4052
</UL>

<P><STRONG><a name="[1b]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelay_Decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[203]"></a>SysTick_Init</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, bsp_systick.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 356 bytes, Stack size 8 bytes, bsp_basic_tim.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; Touch_Scan &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM7_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bsp_basic_tim.o(i.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM7_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1bc]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[1b9]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1be]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[1b6]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1bd]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[1c0]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
</UL>

<P><STRONG><a name="[1bf]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
</UL>

<P><STRONG><a name="[1b8]"></a>TIM_PWMOUTPUT_Config</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, bsp_basic_tim.o(i.TIM_PWMOUTPUT_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIM_PWMOUTPUT_Config &rArr; TIM_OC3Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
</UL>

<P><STRONG><a name="[1bb]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[1c1]"></a>TIMx_Configuration</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_basic_tim.o(i.TIMx_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIMx_Configuration &rArr; TIM_PWMOUTPUT_Config &rArr; TIM_OC3Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_NVIC_Configuration
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_GPIO_Config
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c6]"></a>Test_Process</STRONG> (Thumb, 396 bytes, Stack size 40 bytes, main.o(i.Test_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Test_Process &rArr; DISP_TEMP_L &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Range_adj
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Lstring_Ex
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Convert_read
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex_Format
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Datacov
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b4]"></a>TimingDelay_Decrement</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp_systick.o(i.TimingDelay_Decrement))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1c9]"></a>Touch_GPIO_Config</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, touchscreen.o(i.Touch_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Touch_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ca]"></a>Touch_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, touchscreen.o(i.Touch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Touch_Init &rArr; Rheostat_ADC_Mode_Config &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b7]"></a>Touch_Scan</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, touchscreen.o(i.Touch_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Touch_Scan &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_yy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_xx
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[14f]"></a>UP_HANDLE</STRONG> (Thumb, 2762 bytes, Stack size 8 bytes, bsp_key.o(i.UP_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = UP_HANDLE &rArr; Disp_sys &rArr; stimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_off
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[41]"></a>USART1_IRQHandler</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USART1_IRQHandler &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1cf]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1ff]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[1ce]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1d0]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1fe]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[1eb]"></a>USBD_ClrCfg</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_ClrCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_ClrCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
</UL>

<P><STRONG><a name="[1d4]"></a>USBD_CtlContinueRx</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, usbd_ioreq.o(i.USBD_CtlContinueRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_CtlContinueRx &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataOutStage
</UL>

<P><STRONG><a name="[1d5]"></a>USBD_CtlContinueSendData</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, usbd_ioreq.o(i.USBD_CtlContinueSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_CtlContinueSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
</UL>

<P><STRONG><a name="[1d3]"></a>USBD_CtlError</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_CtlError))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBD_CtlError &rArr; DCD_EP_Stall &rArr; USB_OTG_EPSetStall
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetStatus
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetConfig
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrFeature
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[1d6]"></a>USBD_CtlReceiveStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbd_ioreq.o(i.USBD_CtlReceiveStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBD_CtlReceiveStatus &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
</UL>

<P><STRONG><a name="[1d7]"></a>USBD_CtlSendData</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usbd_ioreq.o(i.USBD_CtlSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetStatus
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetConfig
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
</UL>

<P><STRONG><a name="[1d2]"></a>USBD_CtlSendStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbd_ioreq.o(i.USBD_CtlSendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetFeature
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrFeature
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataOutStage
</UL>

<P><STRONG><a name="[1dc]"></a>USBD_GetString</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_GetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetLen
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_SerialStrDescriptor
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_ProductStrDescriptor
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_ManufacturerStrDescriptor
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_InterfaceStrDescriptor
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_ConfigStrDescriptor
</UL>

<P><STRONG><a name="[175]"></a>USBD_OTG_EP1IN_ISR_Handler</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, usb_dcd_int.o(i.USBD_OTG_EP1IN_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_OTG_EP1IN_ISR_Handler &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_WriteEmptyTxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_EP1_IN_IRQHandler
</UL>

<P><STRONG><a name="[176]"></a>USBD_OTG_EP1OUT_ISR_Handler</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, usb_dcd_int.o(i.USBD_OTG_EP1OUT_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_OTG_EP1OUT_ISR_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_EP1_OUT_IRQHandler
</UL>

<P><STRONG><a name="[174]"></a>USBD_OTG_ISR_Handler</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, usb_dcd_int.o(i.USBD_OTG_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_OTG_ISR_Handler &rArr; DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_SessionRequest_ISR
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_OTG_ISR
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_IsoOUTIncomplete_ISR
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_IsoINIncomplete_ISR
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUSBSuspend_ISR
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleSof_ISR
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleRxStatusQueueLevel_ISR
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleResume_ISR
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleEnumDone_ISR
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadCoreItr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsDeviceMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_IRQHandler
</UL>

<P><STRONG><a name="[1ed]"></a>USBD_ParseSetupRequest</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, usbd_req.o(i.USBD_ParseSetupRequest))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[1ea]"></a>USBD_SetCfg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_SetCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_SetCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
</UL>

<P><STRONG><a name="[1ee]"></a>USBD_StdDevReq</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_StdDevReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetFeature
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetStatus
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetConfig
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrFeature
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[1f0]"></a>USBD_StdEPReq</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_StdEPReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USBD_StdEPReq &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_ClrStall
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[1ef]"></a>USBD_StdItfReq</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_StdItfReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_StdItfReq &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[10]"></a>USBD_USR_ConfigStrDescriptor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_desc.o(i.USBD_USR_ConfigStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_USR_ConfigStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>USBD_USR_DeviceDescriptor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_desc.o(i.USBD_USR_DeviceDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>USBD_USR_InterfaceStrDescriptor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_desc.o(i.USBD_USR_InterfaceStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_USR_InterfaceStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>USBD_USR_LangIDStrDescriptor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_desc.o(i.USBD_USR_LangIDStrDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>USBD_USR_ManufacturerStrDescriptor</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usbd_desc.o(i.USBD_USR_ManufacturerStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_USR_ManufacturerStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>USBD_USR_ProductStrDescriptor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_desc.o(i.USBD_USR_ProductStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_USR_ProductStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>USBD_USR_SerialStrDescriptor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_desc.o(i.USBD_USR_SerialStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_USR_SerialStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[1f1]"></a>USB_OTG_BSP_uDelay</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_bsp.o(i.USB_OTG_BSP_uDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
</UL>

<P><STRONG><a name="[cd]"></a>USB_OTG_EP0Activate</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EP0Activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_EP0Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleEnumDone_ISR
</UL>

<P><STRONG><a name="[c7]"></a>USB_OTG_EP0StartXfer</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, usb_core.o(i.USB_OTG_EP0StartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
</UL>

<P><STRONG><a name="[d2]"></a>USB_OTG_EP0_OutStart</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EP0_OutStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>

<P><STRONG><a name="[c5]"></a>USB_OTG_EPActivate</STRONG> (Thumb, 176 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_EPActivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_EPActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Open
</UL>

<P><STRONG><a name="[c3]"></a>USB_OTG_EPClearStall</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EPClearStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_EPClearStall
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_ClrStall
</UL>

<P><STRONG><a name="[ca]"></a>USB_OTG_EPSetStall</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EPSetStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_EPSetStall
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
</UL>

<P><STRONG><a name="[c8]"></a>USB_OTG_EPStartXfer</STRONG> (Thumb, 502 bytes, Stack size 32 bytes, usb_core.o(i.USB_OTG_EPStartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
</UL>

<P><STRONG><a name="[da]"></a>USB_OTG_FlushTxFifo</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_FlushTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
</UL>

<P><STRONG><a name="[ce]"></a>USB_OTG_GetDeviceSpeed</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_GetDeviceSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_GetDeviceSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleEnumDone_ISR
</UL>

<P><STRONG><a name="[1f2]"></a>USB_OTG_GetMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_GetMode))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsDeviceMode
</UL>

<P><STRONG><a name="[1de]"></a>USB_OTG_IsDeviceMode</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usb_core.o(i.USB_OTG_IsDeviceMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_OTG_IsDeviceMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[1df]"></a>USB_OTG_ReadCoreItr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadCoreItr))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[d0]"></a>USB_OTG_ReadDevAllInEPItr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevAllInEPItr))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[d5]"></a>USB_OTG_ReadDevAllOutEp_itr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevAllOutEp_itr))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
</UL>

<P><STRONG><a name="[d6]"></a>USB_OTG_ReadDevOutEP_itr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevOutEP_itr))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
</UL>

<P><STRONG><a name="[d8]"></a>USB_OTG_ReadPacket</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_ReadPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleRxStatusQueueLevel_ISR
</UL>

<P><STRONG><a name="[db]"></a>USB_OTG_WritePacket</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_WritePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_WriteEmptyTxFifo
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
</UL>

<P><STRONG><a name="[17]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>Wr_CmDat</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, adc.o(i.Wr_CmDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Wr_CmDat &rArr; SpiTxByte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiTxByte
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INIT_ADS1216
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Convert_read
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_4052
</UL>

<P><STRONG><a name="[145]"></a>XYCAL</STRONG> (Thumb, 574 bytes, Stack size 24 bytes, touchscreen.o(i.XYCAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
</UL>

<P><STRONG><a name="[1f3]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[219]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[182]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>

<P><STRONG><a name="[21a]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[21b]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[1f5]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[21c]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[c0]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_off
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfocus_off
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cfocus_off
</UL>

<P><STRONG><a name="[21d]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[21e]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[85]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[21f]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[11c]"></a>__hardfp_atof</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, atof.o(i.__hardfp_atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[1f6]"></a>__read_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__read_errno))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[220]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[221]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[222]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f7]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[9f]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[129]"></a>brt_set</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, bsp_key.o(i.brt_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = brt_set &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[173]"></a>clear_input</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_key.o(i.clear_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = clear_input &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_on
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_on
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_on
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_on
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_on
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_on
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_on
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_on
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
</UL>

<P><STRONG><a name="[16f]"></a>commaxfocus_off</STRONG> (Thumb, 494 bytes, Stack size 40 bytes, bsp_key.o(i.commaxfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = commaxfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
</UL>

<P><STRONG><a name="[11d]"></a>commaxfocus_on</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, bsp_key.o(i.commaxfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = commaxfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[178]"></a>comminfocus_off</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, bsp_key.o(i.comminfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = comminfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
</UL>

<P><STRONG><a name="[f5]"></a>comminfocus_on</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, bsp_key.o(i.comminfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = comminfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[1cd]"></a>consfocus_off</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, bsp_key.o(i.consfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = consfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
</UL>

<P><STRONG><a name="[f4]"></a>consfocus_on</STRONG> (Thumb, 414 bytes, Stack size 40 bytes, bsp_key.o(i.consfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = consfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[b1]"></a>del_num</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, bsp_key.o(i.del_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = del_num &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BACK_HANDLE
</UL>

<P><STRONG><a name="[ab]"></a>delay_us</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_systick.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Range_out
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INIT_ADS1216
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Convert_read
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiTxByte
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiRxByte
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_4052
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_4094
</UL>

<P><STRONG><a name="[f2]"></a>delaytimefocus_off</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, bsp_key.o(i.delaytimefocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = delaytimefocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[f1]"></a>delaytimefocus_on</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, bsp_key.o(i.delaytimefocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = delaytimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[12a]"></a>dim_set</STRONG> (Thumb, 538 bytes, Stack size 8 bytes, bsp_key.o(i.dim_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = dim_set &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[eb]"></a>focus_off1</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, bsp_key.o(i.focus_off1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = focus_off1
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[ec]"></a>focus_on1</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, bsp_key.o(i.focus_on1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = focus_on1
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[7d]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_debug_usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[e9]"></a>input_num</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, bsp_key.o(i.input_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY9_HANDLE
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOT_HANDLE
</UL>

<P><STRONG><a name="[fa]"></a>leftfocus_off</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, bsp_key.o(i.leftfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = leftfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[f9]"></a>leftfocus_on</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bsp_key.o(i.leftfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = leftfocus_on &rArr; Drawfileusbmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawfileusbmenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[77]"></a>main</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = main &rArr; Key_Function &rArr; ENTER_HANDLE &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_measure
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GPIO_Config
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadDeviceID
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Range_out
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Config
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INIT_ADS1216
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_GPIO_Config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_CONFIG
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Process
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_flag
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Flash_Init_Handle
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[172]"></a>maxfocus_off</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, bsp_key.o(i.maxfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = maxfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
</UL>

<P><STRONG><a name="[a2]"></a>maxfocus_on</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, bsp_key.o(i.maxfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = maxfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>

<P><STRONG><a name="[179]"></a>minfocus_off</STRONG> (Thumb, 454 bytes, Stack size 40 bytes, bsp_key.o(i.minfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = minfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
</UL>

<P><STRONG><a name="[171]"></a>minfocus_on</STRONG> (Thumb, 480 bytes, Stack size 40 bytes, bsp_key.o(i.minfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = minfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
</UL>

<P><STRONG><a name="[12e]"></a>minus_day</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_key.o(i.minus_day))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = minus_day &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[12f]"></a>minus_hour</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_key.o(i.minus_hour))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = minus_hour &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[139]"></a>minus_min</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_key.o(i.minus_min))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = minus_min &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
</UL>

<P><STRONG><a name="[138]"></a>minus_mon</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_key.o(i.minus_mon))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = minus_mon &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
</UL>

<P><STRONG><a name="[130]"></a>minus_sec</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_key.o(i.minus_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = minus_sec &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[12d]"></a>minus_year</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_key.o(i.minus_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = minus_year &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[170]"></a>nomafocus_off</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, bsp_key.o(i.nomafocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = nomafocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
</UL>

<P><STRONG><a name="[f6]"></a>nomafocus_on</STRONG> (Thumb, 428 bytes, Stack size 40 bytes, bsp_key.o(i.nomafocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = nomafocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[124]"></a>page_measure</STRONG> (Thumb, 468 bytes, Stack size 16 bytes, manu.o(i.page_measure))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = page_measure &rArr; Rfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_main
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_L
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rfocus_off
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cfocus_off
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[13a]"></a>page_set</STRONG> (Thumb, 996 bytes, Stack size 8 bytes, settings.o(i.page_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = page_set &rArr; nomafocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nomafocus_off
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comminfocus_off
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commaxfocus_off
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
</UL>

<P><STRONG><a name="[131]"></a>page_setdis</STRONG> (Thumb, 594 bytes, Stack size 8 bytes, display.o(i.page_setdis))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = page_setdis &rArr; tc_tepfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawset_dismenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_tepfocus_off
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tc_parfocus_off
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delaytimefocus_on
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consfocus_off
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[132]"></a>page_sys</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, system.o(i.page_sys))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = page_sys &rArr; Disp_sys &rArr; stimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[13c]"></a>page_sysinfo</STRONG> (Thumb, 498 bytes, Stack size 8 bytes, sysinfo.o(i.page_sysinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = page_sysinfo &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysinfomenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[136]"></a>page_usb</STRONG> (Thumb, 582 bytes, Stack size 8 bytes, usb.o(i.page_usb))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = page_usb &rArr; Newfocus_on &rArr; Drawfileusbmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightfocus_off
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftfocus_off
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Newfocus_on
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
</UL>

<P><STRONG><a name="[126]"></a>plus_day</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_key.o(i.plus_day))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = plus_day &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[127]"></a>plus_hour</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_key.o(i.plus_hour))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = plus_hour &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[135]"></a>plus_min</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_key.o(i.plus_min))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = plus_min &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
</UL>

<P><STRONG><a name="[134]"></a>plus_mon</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_key.o(i.plus_mon))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = plus_mon &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
</UL>

<P><STRONG><a name="[128]"></a>plus_sec</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_key.o(i.plus_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = plus_sec &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[125]"></a>plus_year</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_key.o(i.plus_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = plus_year &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[204]"></a>power_on</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, power_on.o(i.power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = power_on &rArr; DrawLogo &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLogo
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SYS
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fc]"></a>rightfocus_off</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, bsp_key.o(i.rightfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = rightfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_usb
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[fb]"></a>rightfocus_on</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, bsp_key.o(i.rightfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = rightfocus_on &rArr; Drawfileusbmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawfileusbmenu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[101]"></a>stimefocus_off</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, bsp_key.o(i.stimefocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = stimefocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
</UL>

<P><STRONG><a name="[100]"></a>stimefocus_on</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, bsp_key.o(i.stimefocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = stimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sysset_button
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_sys
</UL>

<P><STRONG><a name="[ee]"></a>tc_parfocus_off</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, bsp_key.o(i.tc_parfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tc_parfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[ed]"></a>tc_parfocus_on</STRONG> (Thumb, 366 bytes, Stack size 40 bytes, bsp_key.o(i.tc_parfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tc_parfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[f0]"></a>tc_tepfocus_off</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, bsp_key.o(i.tc_tepfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tc_tepfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_setdis
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[ef]"></a>tc_tepfocus_on</STRONG> (Thumb, 460 bytes, Stack size 40 bytes, bsp_key.o(i.tc_tepfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tc_tepfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[12b]"></a>touch_set</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, bsp_key.o(i.touch_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touch_set &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[142]"></a>xEndCH376Cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ch376.o(i.xEndCH376Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
</UL>

<P><STRONG><a name="[141]"></a>xReadCH376Data</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ch376.o(i.xReadCH376Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xReadCH376Data &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
</UL>

<P><STRONG><a name="[13f]"></a>xWriteCH376Cmd</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ch376.o(i.xWriteCH376Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
</UL>

<P><STRONG><a name="[140]"></a>xWriteCH376Data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ch376.o(i.xWriteCH376Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xWriteCH376Data &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1b5]"></a>SetSysClock</STRONG> (Thumb, 272 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[184]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>

<P><STRONG><a name="[189]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[19e]"></a>SDRAM_GPIO_Config</STRONG> (Thumb, 908 bytes, Stack size 16 bytes, bsp_sdram.o(i.SDRAM_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDRAM_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[1a1]"></a>SDRAM_InitSequence</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, bsp_sdram.o(i.SDRAM_InitSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDRAM_InitSequence &rArr; SDRAM_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SetRefreshCount
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMCmdConfig
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_GetFlagStatus
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[1a4]"></a>SDRAM_delay</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, bsp_sdram.o(i.SDRAM_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDRAM_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[15e]"></a>LCD_GPIO_Config</STRONG> (Thumb, 680 bytes, Stack size 16 bytes, bsp_lcd.o(i.LCD_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1ae]"></a>SPI_TIMEOUT_UserCallback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_TIMEOUT_UserCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[1ba]"></a>TIM_Mode_Config</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bsp_basic_tim.o(i.TIM_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
</UL>

<P><STRONG><a name="[1c3]"></a>TIMx_GPIO_Config</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bsp_basic_tim.o(i.TIMx_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIMx_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
</UL>

<P><STRONG><a name="[1c2]"></a>TIMx_NVIC_Configuration</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_basic_tim.o(i.TIMx_NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMx_NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
</UL>

<P><STRONG><a name="[af]"></a>AD_GPIO_Config</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, touchscreen.o(i.AD_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AD_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
</UL>

<P><STRONG><a name="[194]"></a>Rheostat_ADC_Mode_Config</STRONG> (Thumb, 222 bytes, Stack size 104 bytes, touchscreen.o(i.Rheostat_ADC_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Rheostat_ADC_Mode_Config &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMARequestAfterLastTransferCmd
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
</UL>

<P><STRONG><a name="[1cc]"></a>set_xx</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, touchscreen.o(i.set_xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_xx
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
</UL>

<P><STRONG><a name="[1cb]"></a>set_yy</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, touchscreen.o(i.set_yy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_yy
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Scan
</UL>

<P><STRONG><a name="[1b2]"></a>SPI_TIMEOUT_UserCallback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ch376.o(i.SPI_TIMEOUT_UserCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>

<P><STRONG><a name="[cc]"></a>DCD_HandleEnumDone_ISR</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_HandleEnumDone_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DCD_HandleEnumDone_ISR &rArr; USB_OTG_EP0Activate
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetDeviceSpeed
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[cf]"></a>DCD_HandleInEP_ISR</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleInEP_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_WriteEmptyTxFifo
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_ReadDevInEP
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevAllInEPItr
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[d4]"></a>DCD_HandleOutEP_ISR</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleOutEP_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DCD_HandleOutEP_ISR &rArr; USB_OTG_EP0_OutStart
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevOutEP_itr
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevAllOutEp_itr
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[1e0]"></a>DCD_HandleResume_ISR</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleResume_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DCD_HandleResume_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[d7]"></a>DCD_HandleRxStatusQueueLevel_ISR</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleRxStatusQueueLevel_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DCD_HandleRxStatusQueueLevel_ISR &rArr; USB_OTG_ReadPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[1e2]"></a>DCD_HandleSof_ISR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_HandleSof_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_HandleSof_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[1e1]"></a>DCD_HandleUSBSuspend_ISR</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleUSBSuspend_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DCD_HandleUSBSuspend_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[d9]"></a>DCD_HandleUsbReset_ISR</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, usb_dcd_int.o(i.DCD_HandleUsbReset_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DCD_HandleUsbReset_ISR &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[1e3]"></a>DCD_IsoINIncomplete_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_IsoINIncomplete_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_IsoINIncomplete_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[1e4]"></a>DCD_IsoOUTIncomplete_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_IsoOUTIncomplete_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_IsoOUTIncomplete_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[1e6]"></a>DCD_OTG_ISR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_OTG_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_OTG_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[d1]"></a>DCD_ReadDevInEP</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, usb_dcd_int.o(i.DCD_ReadDevInEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DCD_ReadDevInEP
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[1e5]"></a>DCD_SessionRequest_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_SessionRequest_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_SessionRequest_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[d3]"></a>DCD_WriteEmptyTxFifo</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, usb_dcd_int.o(i.DCD_WriteEmptyTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_EP1IN_ISR_Handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[1]"></a>USBD_DataInStage</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_DataInStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_DataInStage &rArr; USBD_CtlContinueSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueSendData
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_RunTestMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>USBD_DataOutStage</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_DataOutStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_DataOutStage &rArr; USBD_CtlContinueRx &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueRx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>USBD_DevConnected</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_DevConnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_DevConnected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>USBD_DevDisconnected</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_DevDisconnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_DevDisconnected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>USBD_IsoINIncomplete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_IsoINIncomplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_IsoINIncomplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>USBD_IsoOUTIncomplete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_IsoOUTIncomplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_IsoOUTIncomplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>USBD_Reset</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USBD_Reset &rArr; DCD_EP_Open &rArr; USB_OTG_EPActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>USBD_Resume</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_Resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[1d8]"></a>USBD_RunTestMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_RunTestMode))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
</UL>

<P><STRONG><a name="[3]"></a>USBD_SOF</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_SOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_SOF
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>USBD_SetupStage</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_SetupStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = USBD_SetupStage &rArr; USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ParseSetupRequest
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>USBD_Suspend</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_Suspend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[1d1]"></a>USBD_ClrFeature</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_ClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_ClrFeature &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[1d9]"></a>USBD_GetConfig</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_GetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_GetConfig &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[1da]"></a>USBD_GetDescriptor</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_GetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[1dd]"></a>USBD_GetLen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbd_req.o(i.USBD_GetLen))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>

<P><STRONG><a name="[1db]"></a>USBD_GetStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_GetStatus &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[1e7]"></a>USBD_SetAddress</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_SetAddress &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_SetAddress
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[1e9]"></a>USBD_SetConfig</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_SetConfig &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetCfg
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrCfg
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[1ec]"></a>USBD_SetFeature</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_SetFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_SetFeature &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[1f8]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1f4]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[1fb]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1fa]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[94]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[9c]"></a>_fp_value</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
